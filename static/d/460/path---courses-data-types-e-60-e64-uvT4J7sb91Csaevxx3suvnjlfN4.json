{"data":{"site":{"siteMetadata":{"author":{"name":"Awesome Learning","contacts":{"twitter":"#"}},"disqusShortname":"","subtitle":"Learning frontend, together","title":"Awesome Learning","url":"www.awesomelearning.com"}},"markdownRemark":{"id":"b2dd2402-da30-5eeb-b253-dfa46593df47","html":"<h2 id=\"sessions\"><a href=\"#sessions\" aria-label=\"sessions permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sessions</h2>\n<ol>\n<li>\n<p><a href=\"types-and-equality\">Session 1 Types and Equality</a></p>\n<ul>\n<li>\n<p>Engineers familiar with strictly typed languages like (C++/Java) may\nfind the lack of types in JavaScript shocking. But that is only true on\nthe surface, the truth is that JavaScript has several types.\nUnderstanding how they interact together, what they <em>mean</em> will help\nclear up common misconceptions and make JavaScript seem much more\npredictable.</p>\n</li>\n<li>\n<p>Type safety is a popular topic in modern JavaScript Applications. A\nsolid foundation of types in the language opens a door to exploring what\n“type coercion” is, why it exists and how to avoid it entirely. We will\nput everything we learned so far into practice and see how value\nequality is determined in JavaScript.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"objects\">Session 2 Objects</a></p>\n<ul>\n<li>“In JavaScript, <strong>almost</strong> everything is an object” is the phrase which\nwill be the topic of conversation. In this session, we will learn what\nthis means and how to put this new found knowledge into practice.</li>\n</ul>\n</li>\n</ol>","fields":{"slug":"/courses/Data-Types/","tagSlugs":["/tag/types/","/tag/coercion/","/tag/equality/","/tag/comparisons/","/tag/debugging/","/tag/refactoring/"]},"frontmatter":{"description":"The focus of this course is to make you familiar with the nuance of the JavaScript Data Types. A little hazy on passing objects by reference? Not sure why your number is coercing to a string? Not sure what coercion is? Then this is the topic for you. Feel at home with the data types and how to make them do what you want by the end of this course","tags":["Types","Coercion","Equality","Comparisons","Debugging","Refactoring"],"title":"Data Types"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/courses/Data-Types/"}}