{"version":3,"sources":["webpack:///./src/components/Quiz/quizUtilities.js","webpack:///./src/components/Quiz/Question/Question.js","webpack:///./src/components/Quiz/Question/questionValidator.js","webpack:///./src/components/Quiz/Quiz.js","webpack:///./src/templates/quiz-template.js","webpack:///./src/utils/get-icon.js","webpack:///./src/utils/get-contact-href.js","webpack:///./src/utils/index.js","webpack:///./src/components/Icon/Icon.js","webpack:///./src/components/Icon/index.js","webpack:///./src/constants/icons.js","webpack:///./src/constants/pagination.js","webpack:///./src/constants/index.js","webpack:///./src/components/Header/Menu/Menu.js","webpack:///./src/components/Header/Header.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Page/Page.js","webpack:///./src/components/Page/index.js","webpack:///./src/components/Link/Link.js","webpack:///./src/components/Link/index.js","webpack:///./src/components/ContentSection/ContentSection.js","webpack:///./src/components/ContentSection/index.js"],"names":["getChoiceIndex","element","parseInt","getAttribute","Question","_ref","handleInputChange","question","questionId","questionIndex","shouldShowCorrectChoice","title","react_default","a","createElement","className","onChange","cx","Question-legend--isCorrect","isCorrect","Question-legend--isIncorrect","codeSnippet","explanation","choices","map","choice","choiceIndex","choiceId","formatChoiceId","shouldBoldenLabel","correctChoices","includes","key","data-choice-index","data-question-index","id","name","type","value","Question-choiceLabel--isBold","htmlFor","questionValidator","selectedChoices","reduce","listOfChoices","isSelected","push","correctChoiceValues","length","every","Quiz","quiz","slug","initialState","questions","_useState","useState","_useState$","updateQuizState","_ref2","fieldset","currentTarget","target","currentQuestion","selectedIndices","Array","from","querySelectorAll","forEach","index","updatedQuestions","Link","variation","path","ContentSection","subTitle","description","formatQuestionId","questionTitle","Quiz_Question_Question","onClick","window","scrollTo","validatedQuestions","__webpack_require__","d","__webpack_exports__","query","QuizTemplate","data","_data$site$siteMetada","site","siteMetadata","siteTitle","siteSubtitle","subtitle","_data$markdownRemark$","markdownRemark","frontmatter","quizTitle","courseDescription","fields","metaDescription","preReadQuiz","Layout","Page","components_Quiz_Quiz","getIconPropTypes","PropTypes","string","isRequired","getIcon","icon","propsObject","checkPropTypes","ICONS","TWITTER","GITHUB","VKONTAKTE","TELEGRAM","EMAIL","RSS","LOGO","MENU","FUNCTIONS","ARRAY","ASYNC","DATA","TESTING","get_icon","Icon","_ref$cssClasses","cssClasses","viewBox","components_Icon_Icon","FACEBOOK","PAGINATION","PREV_PAGE","NEXT_PAGE","icons","pagination","Menu","menu","item","label","gatsby_browser_entry","to","PureHeader","Header_Menu_Menu","href","rel","Header","props","render","Header_PureHeader","Object","assign","_2674749273","children","isFullBleed","layoutClass","Layout--fullBleed","Fragment","Helmet_default","lang","content","components_Header_Header","defaultProps","components_Layout_Layout","pageRef","useRef","useEffect","current","scrollIntoView","scrollBy","ref","components_Page_Page","StyledLink","_cx","isBlock","isButton","isActive","isExternal","is-button","is-block","activeClassName","Link_Link","isLight","contentAlignment","titleAlignment","headerClasses","ContentSection-title--alignCenter","ContentSection-title--alignLeft","ContentSection-title--textLight","contentClasses","ContentSection-content--alignCenter","ContentSection-content--alignLeft","textAlignment","components_ContentSection_ContentSection"],"mappings":"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","file":"component---src-templates-quiz-template-js-c540d12bfeb1cf8c5e27.js","sourcesContent":["// Formats the input ID for one question choice\nexport const formatChoiceId = (questionId, choiceIndex) => `${questionId}_choice${choiceIndex}`;\n\n// Formats the question ID for one question\nexport const formatQuestionId = questionIndex => `question${questionIndex}`;\n\n// Gets the numeric index of this choice\nexport const getChoiceIndex = element => parseInt(element.getAttribute('data-choice-index'), 10);\n\n// Gets the numeric index of this choice\nexport const getQuestionIndex = element => parseInt(element.getAttribute('data-question-index'), 10);\n","import React from \"react\";\nimport cx from 'classnames';\nimport { formatChoiceId } from \"../quizUtilities\";\nimport \"./question.scss\";\n\nconst Question = ({\n  handleInputChange,\n  question,\n  questionId,\n  questionIndex,\n  shouldShowCorrectChoice,\n  title\n}) => (\n  <fieldset className=\"Question\" onChange={handleInputChange}>\n    <legend className={cx(\"Question-legend\", {\n      \"Question-legend--isCorrect\": question.isCorrect === true,\n      \"Question-legend--isIncorrect\": question.isCorrect === false,\n    })}>\n      {title}\n    </legend>\n    {question.codeSnippet && (\n      <pre className=\"Question-codeSnippet\">\n        {question.codeSnippet}\n      </pre>\n    )}\n    {/* If instructed, show the explanation to this question */}\n    {shouldShowCorrectChoice && question.explanation && (\n      <div className=\"Question-explanation\">\n        <b>Explanation: </b>{question.explanation}\n      </div>\n    )}\n    {/* Iterate over all choices this question has, and display them */}\n    {\n      question.choices.map((choice, choiceIndex) => {\n        const choiceId = formatChoiceId(questionId, choiceIndex);\n        // Bolden the label to this question to highlight it as the right answer\n        const shouldBoldenLabel = (\n          shouldShowCorrectChoice\n          && question.correctChoices.includes(choiceIndex)\n        );\n        return (\n          <div className=\"Question-choice\" key={choiceId}>\n            <input\n              className=\"Question-choiceInput\"\n              data-choice-index={choiceIndex}\n              data-question-index={questionIndex}\n              id={choiceId}\n              key={choiceIndex}\n              name={questionId}\n              type={question.type}\n              value={choice.value}\n            />\n            <label\n              className={cx('Question-choiceLabel', {\n                'Question-choiceLabel--isBold': shouldBoldenLabel\n              })}\n              htmlFor={choiceId}\n            >\n              {choice.value}\n            </label>\n          </div>\n        );\n      })\n    }\n  </fieldset>\n);\n\nexport default Question;\n","export default function questionValidator(question) {\n  const { choices, correctChoices } = question;\n  // Get the user-selected choice values\n  const selectedChoices = choices.reduce((listOfChoices, choice) => {\n    if (choice.isSelected) {\n      listOfChoices.push(choice.value);\n    }\n    return listOfChoices;\n  }, []);\n\n  // Get the values of the correct choices\n  const correctChoiceValues = choices.reduce((listOfChoices, choice, choiceIndex) => {\n    if (correctChoices.includes(choiceIndex)) {\n      listOfChoices.push(choice.value);\n    }\n    return listOfChoices;\n  }, []);\n\n  // If there is a discrepancy in the number of choices, versus the number of correct choices,\n  // mark the question as incorrect and return early\n  if (selectedChoices.length !== correctChoices.length) {\n    question.isCorrect = false;\n    return question;\n  }\n\n  // If the length is the same, compare each value to verify that every correct choice\n  // is in the list of user-selected choices\n  question.isCorrect = correctChoiceValues.every(choice => selectedChoices.includes(choice));\n  return question;\n}\n","import React, { useState } from \"react\";\nimport { formatQuestionId, getChoiceIndex, getQuestionIndex } from './quizUtilities';\nimport ContentSection from \"../ContentSection\";\nimport Question from \"./Question\";\nimport questionValidator from './Question/questionValidator';\nimport StyledLink from '../Link';\nimport \"./quiz.scss\";\n\nconst Quiz = ({ quiz, slug, title }) => {\n  const initialState = {\n    shouldShowCorrectChoice: false,\n    questions: quiz.questions\n  };\n  // Hooks to maintain state within this Quiz\n  const [\n    { shouldShowCorrectChoice, questions },\n    updateQuizState\n  ] = useState(initialState);\n\n  // Handles changing of a question; update state based on which choice(s) the user has selected\n  const handleInputChange = ({ currentTarget: fieldset, target }) => {\n    // Get the current question and mark the appropriate choices as being selected by the user\n    const questionIndex = getQuestionIndex(target);\n    const currentQuestion = questions[questionIndex];\n    switch (currentQuestion.type) {\n      case 'checkbox': {\n        // Gets the indices of selected checkboxes\n        const selectedIndices = Array.from(\n          fieldset.querySelectorAll('input:checked')\n        ).map(getChoiceIndex);\n\n        // Updates every choice based on whether or not it is in the list of user-selected choices\n        currentQuestion.choices.forEach((choice, index) => {\n          choice.isSelected = selectedIndices.includes(index);\n        });\n        break;\n      }\n      case 'radio': {\n        // Set the selection status of all question choices based on\n        // whether or not the user has selected them\n        const choiceIndex = getChoiceIndex(target);\n        currentQuestion.choices.forEach((choice, index) => {\n          choice.isSelected = choiceIndex === index;\n        });\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    // Clone the questions array to force a state change\n    const updatedQuestions = Array.from(questions);\n    // Update the state of the quiz\n    updateQuizState({\n      shouldShowCorrectChoice: false,\n      questions: updatedQuestions\n    });\n  };\n\n  // Handles the submission of the quiz\n  const handleQuizSubmit = () => {\n    // Scroll to the top of the page\n    window.scrollTo(0, 0);\n    // Validate every question and update the state of the quiz\n    const validatedQuestions = questions.map(questionValidator);\n    updateQuizState({\n      shouldShowCorrectChoice: true,\n      questions: validatedQuestions\n    });\n  };\n\n  return (\n    <div className=\"Quiz\">\n      <div className=\"Quiz-homeButton\">\n        <StyledLink variation={\"tertiary\"} path={slug}>\n          Back to lesson\n        </StyledLink>\n      </div>\n      <ContentSection subTitle={'Pre-Read Quiz'} title={title}>\n        {quiz.description && <p>{quiz.description}</p>}\n        {/* Iterate over all questions in this Quiz */}\n        {\n          questions.map((question, questionIndex) => {\n            const questionId = formatQuestionId(questionIndex);\n            const questionTitle = `Q${questionIndex + 1}: ${question.description}`;\n            return (\n              <Question\n                handleInputChange={handleInputChange}\n                key={questionId}\n                question={question}\n                questionId={questionId}\n                questionIndex={questionIndex}\n                shouldShowCorrectChoice={shouldShowCorrectChoice}\n                title={questionTitle}\n              />\n            );\n          })\n        }\n        <button\n          className=\"Quiz-submitButton\"\n          onClick={handleQuizSubmit}\n        >\n          Submit Quiz\n        </button>\n      </ContentSection>\n    </div>\n  );\n};\n\nexport default Quiz;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Page from '../components/Page';\nimport Quiz from \"../components/Quiz\";\n\nconst QuizTemplate = ({ data }) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = data.site.siteMetadata;\n\n  const {\n    title: quizTitle,\n    description: courseDescription\n  } = data.markdownRemark.frontmatter;\n\n  const { slug } = data.markdownRemark.fields;\n  const { title } = data.markdownRemark.frontmatter;\n\n  const metaDescription = courseDescription !== null ? courseDescription : siteSubtitle;\n\n  const { markdownRemark: { frontmatter: { preReadQuiz } } } = data;\n\n  return (\n    <Layout\n      title={`${quizTitle} - ${siteTitle}`}\n      description={metaDescription}\n    >\n      <Page>\n        {\n          preReadQuiz === null ? (\n            <h1>A quiz for this lesson is not ready yet!</h1>\n          ) : (\n            <Quiz quiz={preReadQuiz} slug={slug} title={title} />\n          )\n        }\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query QuizBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        subtitle\n        title\n        url\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        title\n        preReadQuiz {\n          description\n          questions {\n            codeSnippet\n            correctChoices\n            description\n            explanation\n            type\n            choices {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default QuizTemplate;\n","import PropTypes from 'prop-types';\nimport { ICONS } from '../constants';\n\nconst getIconPropTypes = {\n  name: PropTypes.string.isRequired\n};\n\nconst getIcon = (name) => {\n  // Manually check the propTypes passed to this function\n  const propsObject = { name };\n  PropTypes.checkPropTypes(getIconPropTypes, propsObject, 'prop', 'getIcon');\n\n  let icon;\n\n  switch (name) {\n    case 'twitter':\n      icon = ICONS.TWITTER;\n      break;\n    case 'github':\n      icon = ICONS.GITHUB;\n      break;\n    case 'vkontakte':\n      icon = ICONS.VKONTAKTE;\n      break;\n    case 'telegram':\n      icon = ICONS.TELEGRAM;\n      break;\n    case 'email':\n      icon = ICONS.EMAIL;\n      break;\n    case 'rss':\n      icon = ICONS.RSS;\n      break;\n    case 'logo':\n      icon = ICONS.LOGO;\n      break;\n    case 'menu':\n      icon = ICONS.MENU;\n      break;\n    case 'functions':\n      icon = ICONS.FUNCTIONS;\n      break;\n    case 'array':\n      icon = ICONS.ARRAY;\n      break;\n    case 'async':\n      icon = ICONS.ASYNC;\n      break;\n    case 'data':\n      icon = ICONS.DATA;\n      break;\n    case 'testing':\n      icon = ICONS.TESTING;\n      break;\n    default:\n      icon = {};\n      break;\n  }\n\n  return icon;\n};\n\nexport default getIcon;\n","import PropTypes from 'prop-types';\n\nconst getContactHrefPropTypes = {\n  name: PropTypes.string.isRequired,\n  contact: PropTypes.string.isRequired\n};\n\nconst getContactHref = (name, contact) => {\n  // Manually check the propTypes passed to this function\n  const propsObject = { name, contact };\n  PropTypes.checkPropTypes(getContactHrefPropTypes, propsObject, 'prop', 'getContactHref');\n\n  let href;\n\n  switch (name) {\n    case 'twitter':\n      href = `https://www.twitter.com/${contact}`;\n      break;\n    case 'github':\n      href = `https://github.com/${contact}`;\n      break;\n    case 'vkontakte':\n      href = `https://vk.com/${contact}`;\n      break;\n    case 'telegram':\n      href = `telegram:${contact}`;\n      break;\n    case 'email':\n      href = `mailto:${contact}`;\n      break;\n    default:\n      href = contact;\n      break;\n  }\n\n  return href;\n};\n\nexport default getContactHref;\n","export { default as getIcon } from './get-icon';\nexport { default as getContactHref } from './get-contact-href';\n","import React from 'react';\nimport './Icon.scss';\n\nconst Icon = ({ icon, cssClasses = \"\" }) => (\n  <svg className={`Icon ${cssClasses}`} viewBox={icon.viewBox}>\n    <path d={icon.path} />\n  </svg>\n);\n\nexport default Icon;\n","export { default } from './Icon';\n","const ICONS = {\n  TWITTER: {\n    path:\n      'M25.312 6.375c-0.688 1-1.547 1.891-2.531 2.609 0.016 0.219 0.016 0.438 0.016 0.656 0 6.672-5.078 14.359-14.359 14.359-2.859 0-5.516-0.828-7.75-2.266 0.406 0.047 0.797 0.063 1.219 0.063 2.359 0 4.531-0.797 6.266-2.156-2.219-0.047-4.078-1.5-4.719-3.5 0.313 0.047 0.625 0.078 0.953 0.078 0.453 0 0.906-0.063 1.328-0.172-2.312-0.469-4.047-2.5-4.047-4.953v-0.063c0.672 0.375 1.453 0.609 2.281 0.641-1.359-0.906-2.25-2.453-2.25-4.203 0-0.938 0.25-1.797 0.688-2.547 2.484 3.062 6.219 5.063 10.406 5.281-0.078-0.375-0.125-0.766-0.125-1.156 0-2.781 2.25-5.047 5.047-5.047 1.453 0 2.766 0.609 3.687 1.594 1.141-0.219 2.234-0.641 3.203-1.219-0.375 1.172-1.172 2.156-2.219 2.781 1.016-0.109 2-0.391 2.906-0.781z',\n    viewBox: '0 0 26 28'\n  },\n  FACEBOOK: {\n    path:\n      'M14.984 0.187v4.125h-2.453c-1.922 0-2.281 0.922-2.281 2.25v2.953h4.578l-0.609 4.625h-3.969v11.859h-4.781v-11.859h-3.984v-4.625h3.984v-3.406c0-3.953 2.422-6.109 5.953-6.109 1.687 0 3.141 0.125 3.563 0.187z',\n    viewBox: '0 0 16 28'\n  },\n  TELEGRAM: {\n    path:\n      'M27.563 0.172c0.328 0.234 0.484 0.609 0.422 1l-4 24c-0.047 0.297-0.234 0.547-0.5 0.703-0.141 0.078-0.313 0.125-0.484 0.125-0.125 0-0.25-0.031-0.375-0.078l-7.078-2.891-3.781 4.609c-0.187 0.234-0.469 0.359-0.766 0.359-0.109 0-0.234-0.016-0.344-0.063-0.391-0.141-0.656-0.516-0.656-0.938v-5.453l13.5-16.547-16.703 14.453-6.172-2.531c-0.359-0.141-0.594-0.469-0.625-0.859-0.016-0.375 0.172-0.734 0.5-0.922l26-15c0.156-0.094 0.328-0.141 0.5-0.141 0.203 0 0.406 0.063 0.562 0.172z',\n    viewBox: '0 0 28 28'\n  },\n  VKONTAKTE: {\n    path:\n      'M29.953 8.125c0.234 0.641-0.5 2.141-2.344 4.594-3.031 4.031-3.359 3.656-0.859 5.984 2.406 2.234 2.906 3.313 2.984 3.453 0 0 1 1.75-1.109 1.766l-4 0.063c-0.859 0.172-2-0.609-2-0.609-1.5-1.031-2.906-3.703-4-3.359 0 0-1.125 0.359-1.094 2.766 0.016 0.516-0.234 0.797-0.234 0.797s-0.281 0.297-0.828 0.344h-1.797c-3.953 0.25-7.438-3.391-7.438-3.391s-3.813-3.938-7.156-11.797c-0.219-0.516 0.016-0.766 0.016-0.766s0.234-0.297 0.891-0.297l4.281-0.031c0.406 0.063 0.688 0.281 0.688 0.281s0.25 0.172 0.375 0.5c0.703 1.75 1.609 3.344 1.609 3.344 1.563 3.219 2.625 3.766 3.234 3.437 0 0 0.797-0.484 0.625-4.375-0.063-1.406-0.453-2.047-0.453-2.047-0.359-0.484-1.031-0.625-1.328-0.672-0.234-0.031 0.156-0.594 0.672-0.844 0.766-0.375 2.125-0.391 3.734-0.375 1.266 0.016 1.625 0.094 2.109 0.203 1.484 0.359 0.984 1.734 0.984 5.047 0 1.062-0.203 2.547 0.562 3.031 0.328 0.219 1.141 0.031 3.141-3.375 0 0 0.938-1.625 1.672-3.516 0.125-0.344 0.391-0.484 0.391-0.484s0.25-0.141 0.594-0.094l4.5-0.031c1.359-0.172 1.578 0.453 1.578 0.453z',\n    viewBox: '0 0 31 28'\n  },\n  GITHUB: {\n    path:\n      'M12 0a12.15 12.15 0 0 1 12 12.3A12.29 12.29 0 0 1 15.79 24c-.6.11-.82-.27-.82-.59v-2.1c3.34.75 4-1.65 4-1.65a3.27 3.27 0 0 1 1.33-1.8c1.09-.76-.08-.74-.08-.74a2.53 2.53 0 0 0-1.84 1.26 2.52 2.52 0 0 1-3.49 1 2.68 2.68 0 0 0-.76-1.65c2.66-.31 5.47-1.36 5.47-6.08a4.82 4.82 0 0 0-1.24-3.3 4.52 4.52 0 0 0-.06-3.25s-1-.33-3.3 1.26a11.18 11.18 0 0 0-6 0C6.7 4.77 5.7 5.1 5.7 5.1a4.52 4.52 0 0 0-.12 3.26 4.81 4.81 0 0 0-1.23 3.3c0 4.73 2.8 5.77 5.47 6.07A3 3 0 0 0 9 20v3.38c0 .38-.21.71-.82.59A12.29 12.29 0 0 1 0 12.3 12.15 12.15 0 0 1 12 0z',\n    viewBox: '0 0 24 24'\n  },\n  EMAIL: {\n    path:\n      'M26 23.5v-12c-0.328 0.375-0.688 0.719-1.078 1.031-2.234 1.719-4.484 3.469-6.656 5.281-1.172 0.984-2.625 2.188-4.25 2.188h-0.031c-1.625 0-3.078-1.203-4.25-2.188-2.172-1.813-4.422-3.563-6.656-5.281-0.391-0.313-0.75-0.656-1.078-1.031v12c0 0.266 0.234 0.5 0.5 0.5h23c0.266 0 0.5-0.234 0.5-0.5zM26 7.078c0-0.391 0.094-1.078-0.5-1.078h-23c-0.266 0-0.5 0.234-0.5 0.5 0 1.781 0.891 3.328 2.297 4.438 2.094 1.641 4.188 3.297 6.266 4.953 0.828 0.672 2.328 2.109 3.422 2.109h0.031c1.094 0 2.594-1.437 3.422-2.109 2.078-1.656 4.172-3.313 6.266-4.953 1.016-0.797 2.297-2.531 2.297-3.859zM28 6.5v17c0 1.375-1.125 2.5-2.5 2.5h-23c-1.375 0-2.5-1.125-2.5-2.5v-17c0-1.375 1.125-2.5 2.5-2.5h23c1.375 0 2.5 1.125 2.5 2.5z',\n    viewBox: '0 0 28 28'\n  },\n  RSS: {\n    path:\n      'M6 21c0 1.656-1.344 3-3 3s-3-1.344-3-3 1.344-3 3-3 3 1.344 3 3zM14 22.922c0.016 0.281-0.078 0.547-0.266 0.75-0.187 0.219-0.453 0.328-0.734 0.328h-2.109c-0.516 0-0.938-0.391-0.984-0.906-0.453-4.766-4.234-8.547-9-9-0.516-0.047-0.906-0.469-0.906-0.984v-2.109c0-0.281 0.109-0.547 0.328-0.734 0.172-0.172 0.422-0.266 0.672-0.266h0.078c3.328 0.266 6.469 1.719 8.828 4.094 2.375 2.359 3.828 5.5 4.094 8.828zM22 22.953c0.016 0.266-0.078 0.531-0.281 0.734-0.187 0.203-0.438 0.313-0.719 0.313h-2.234c-0.531 0-0.969-0.406-1-0.938-0.516-9.078-7.75-16.312-16.828-16.844-0.531-0.031-0.938-0.469-0.938-0.984v-2.234c0-0.281 0.109-0.531 0.313-0.719 0.187-0.187 0.438-0.281 0.688-0.281h0.047c5.469 0.281 10.609 2.578 14.484 6.469 3.891 3.875 6.188 9.016 6.469 14.484z',\n    viewBox: '0 0 22 28'\n  },\n  LOGO: {\n    path:\n      'M24 7.65l-1.52-5.72a.59.59 0 0 0-.39-.38L16.35 0a.55.55 0 0 0-.53.15L12 4l8 8 3.82-3.82a.55.55 0 0 0 .18-.53m-24 8.7l1.51 5.72a.55.55 0 0 0 .39.38L7.65 24a.55.55 0 0 0 .53-.15L12 20l-8-8-3.81 3.82a.53.53 0 0 0-.16.53M7.65 0L1.93 1.55a.56.56 0 0 0-.38.38L0 7.65a.55.55 0 0 0 .15.53L4 12l8-8L8.18.19A.49.49 0 0 0 7.65 0M23.8 15.77L20 12l-8 8 3.75 3.77a.74.74 0 0 0 .68.18L22 22.49a.66.66 0 0 0 .49-.49L24 16.47a.67.67 0 0 0-.16-.66',\n    viewBox: '0 0 24 24'\n  },\n  MENU: {\n    path:\n      'M7,9h14c0.6,0,1-0.4,1-1s-0.4-1-1-1H7C6.4,7,6,7.4,6,8S6.4,9,7,9z M21,13H7c-0.6,0-1,0.4-1,1s0.4,1,1,1h14c0.6,0,1-0.4,1-1S21.6,13,21,13z M21,19H7c-0.6,0-1,0.4-1,1s0.4,1,1,1h14c0.6,0,1-0.4,1-1S21.6,19,21,19z',\n    viewBox: '0 0 28 28'\n  },\n  FUNCTIONS: {\n    path:\n      'M5 2C2.33 5.32 1 9.49 1 14.5S2.33 23.68 5 27M21 2c2.67 3.32 4 7.49 4 12.5s-1.33 9.18-4 12.5',\n    viewBox: '0 0 26 29'\n  },\n  ARRAY: {\n    path:\n      'M0 24h7.67v-2H1.83V2h5.92V0H0M24 0h-7.67v2h5.8v20h-5.92v2H24',\n    viewBox: '0 0 24 24'\n  },\n  ASYNC: {\n    path:\n      'M15.1.49A12.88 12.88 0 0 0 1.31 5.08 1.006 1.006 0 0 0 3 6.17a10.94 10.94 0 0 1 11.6-3.78 10.06 10.06 0 0 1 7.4 9.26l-3-2.19a1 1 0 0 0-1.4.2 1 1 0 0 0 .2 1.39l4.5 3.29.6.2h.4a1 1 0 0 0 .6-.8A12.07 12.07 0 0 0 15.1.49zM21 17.72a11 11 0 0 1-11.6 3.79A10.06 10.06 0 0 1 2 12.25l3 2.19a1 1 0 1 0 1.2-1.6L1.71 9.56a1 1 0 0 0-1.4.19 1 1 0 0 0-.2.5A12.06 12.06 0 0 0 8.8 23.5a13.39 13.39 0 0 0 3.5.5 12.63 12.63 0 0 0 10.29-5.08 1 1 0 0 0-.2-1.39 1 1 0 0 0-1.39.19z',\n    viewBox: '0 0 24 24'\n  },\n  DATA: {\n    path:\n      'M22.62 11.76H19.7l1.07-3.57a2.41 2.41 0 0 0 .08-.6 1.57 1.57 0 0 0-1.37-1.71h-2.14l1.07-3.57a2.35 2.35 0 0 0 .08-.6A1.57 1.57 0 0 0 17.12 0H4.55a1.43 1.43 0 0 0-1.23 1L.12 9.83a2.06 2.06 0 0 0-.12.7 1.93 1.93 0 0 0 .4 1.21 1.23 1.23 0 0 0 1 .5h2.34l-1.26 3.47a2 2 0 0 0-.12.69 2 2 0 0 0 .4 1.22 1.26 1.26 0 0 0 1 .5h3.12l-1.25 3.46a2.1 2.1 0 0 0-.12.7 1.91 1.91 0 0 0 .4 1.21 1.23 1.23 0 0 0 1 .51H20a1.44 1.44 0 0 0 1.29-1.11l2.64-8.82a2 2 0 0 0 .09-.61 1.57 1.57 0 0 0-1.4-1.7zm-21.24-1a.18.18 0 0 1-.14-.08.25.25 0 0 1-.06-.17.36.36 0 0 1 0-.1l3.22-8.8a.2.2 0 0 1 .18-.14h12.54c.11 0 .19.11.18.33l-1.22 4.08H6.91a1.41 1.41 0 0 0-1.23 1l-1.41 3.9zm2.36 5.87a.16.16 0 0 1-.14-.07.27.27 0 0 1-.06-.17.3.3 0 0 1 0-.1L5 12.24l1.76-4.75a.2.2 0 0 1 .18-.14h12.54c.11 0 .19.11.18.33l-1.22 4.08L17 16.49a.2.2 0 0 1-.19.16H3.74zm16.42 5.72a.19.19 0 0 1-.18.16H6.88a.17.17 0 0 1-.14-.07.32.32 0 0 1 0-.18.28.28 0 0 1 0-.09l1.48-4.07h8.65a1.31 1.31 0 0 0 1.09-.66 2 2 0 0 0 .2-.45l1.14-3.79h3.36c.11 0 .2.11.19.33z',\n    viewBox: '0 0 24 24'\n  },\n  TESTING: {\n    path:\n      'M16 2.75a9.39 9.39 0 1 0-1.29 14.34 2.05 2.05 0 0 0 .54 1l5.33 5.33a2 2 0 0 0 2.81-2.81l-5.33-5.33a2.05 2.05 0 0 0-1-.54A9.39 9.39 0 0 0 16 2.75zm-1.66 11.59a7 7 0 1 1 0-9.91 7 7 0 0 1 0 9.91z',\n    viewBox: '0 0 24 24'\n  }\n};\n\nexport default ICONS;\n","const PAGINATION = {\n  PREV_PAGE: '← PREV',\n  NEXT_PAGE: '→ NEXT'\n};\n\nexport default PAGINATION;\n","export { default as ICONS } from './icons';\nexport { default as PAGINATION } from './pagination';\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Icon from \"../../Icon\";\nimport { getIcon } from \"../../../utils\";\nimport \"./Menu.scss\";\n\nconst Menu = ({ menu }) => (\n  <div className=\"Menu\">\n    <Icon icon={getIcon(\"menu\")} cssClasses=\"Menu-icon\" />\n    <ul className=\"Menu-list\">\n      {menu.map(item => (\n        <li key={item.label} className=\"Menu-item\">\n          <Link to={item.path}> {item.label} </Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Menu;\n","import React from \"react\";\nimport { Link, graphql, StaticQuery } from \"gatsby\";\nimport Menu from \"./Menu\";\nimport Icon from \"../Icon\";\nimport { getIcon } from \"../../utils\";\nimport \"./Header.scss\";\n\nexport const PureHeader = ({ data }) => {\n  const { title, menu } = data.site.siteMetadata;\n  return (\n    <header className=\"Header\">\n      <Link to=\"/\" className=\"Header-logo\">\n        <Icon\n          icon={getIcon(\"logo\")}\n          cssClasses=\"Header-icon Header-icon--logo\"\n        />\n        <h1 className=\"Header-title\">{title}</h1>\n      </Link>\n      <nav className=\"Header-nav\">\n        <div className=\"Header-menu Header-menu--icon\">\n          <Menu menu={menu} />\n        </div>\n        <ul className=\"Header-list\">\n          {menu.map(item => (\n            <li key={item.label} className=\"Header-menu\">\n              <Link className=\"Header-link\" to={item.path}>\n                {item.label}\n              </Link>\n            </li>\n          ))}\n          <li className=\"Header-menu\">\n            <a\n              href=\"https://github.com/wayfair/awesome-learning\"\n              className=\"Header-link\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon icon={getIcon(\"github\")} />\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport const Header = props => (\n  <StaticQuery\n    query={graphql`\n      query HeaderQuery {\n        site {\n          siteMetadata {\n            title\n            menu {\n              label\n              path\n            }\n          }\n        }\n      }\n    `}\n    render={data => <PureHeader {...props} data={data} />}\n  />\n);\n\nexport default Header;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport cx from \"classnames\";\nimport Header from \"../Header\";\n\nimport \"./Layout.scss\";\n\nconst Layout = ({ children, title, description, isFullBleed }) => {\n  const layoutClass = cx(\"Layout\", {\n    \"Layout--fullBleed\": isFullBleed\n  });\n  return (\n    <>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n        <link\n          href=\"https://fonts.googleapis.com/css?family=Raleway:200,400\"\n          rel=\"stylesheet\"\n        />\n      </Helmet>\n      <Header />\n      <div className={layoutClass}>{children}</div>\n    </>\n  );\n};\n\nLayout.defaultProps = {\n  isFullBleed: false\n};\n\nexport default Layout;\n","export { default } from './Layout';\n","import React, { useRef, useEffect } from 'react';\nimport './Page.scss';\n\nconst Page = ({ title, children }) => {\n  const pageRef = useRef();\n\n  useEffect(() => {\n    pageRef.current.scrollIntoView();\n    window.scrollBy(0, -90);\n  });\n\n  return (\n    <div ref={pageRef} className=\"Page\">\n      <div className=\"Page-inner\">\n        { title && <h1 className=\"Page-title\">{title}</h1>}\n        <div className=\"Page-body\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Page;","export { default } from './Page';\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport cx from \"classnames\";\nimport \"./Link.scss\";\n\nconst LINK_VARIATIONS = [\n  \"primary\",\n  \"secondary\",\n  \"tertiary\",\n  \"tertiaryAlt\",\n  \"tertiaryAltInverse\",\n  \"pill\"\n];\n\nconst StyledLink = ({\n  children,\n  variation,\n  path,\n  isBlock,\n  isButton,\n  isActive,\n  isExternal\n}) => {\n  const className = cx(\"Link\", {\n    \"is-button\": isButton,\n    \"is-block\": isBlock,\n    [`Link--${variation}`]: variation && !isButton\n  });\n\n  return isExternal ? (\n    <a className={className} href={path} target=\"_blank\">\n      {children}\n    </a>\n  ) : (\n    <Link\n      className={className}\n      to={path}\n      activeClassName={isActive ? \"is-active\" : \"\"}\n    >\n      {children}\n    </Link>\n  );\n};\n\nStyledLink.propTypes = {\n  variation: PropTypes.oneOf(LINK_VARIATIONS),\n  path: PropTypes.string.isRequired,\n  isButton: PropTypes.bool,\n  isActive: PropTypes.bool,\n  isExternal: PropTypes.bool\n};\n\nStyledLink.defaultProps = {\n  variation: null,\n  isButton: false,\n  isActive: false,\n  isExternal: false\n};\n\nexport default StyledLink;\n","export { default } from './Link';\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport \"./ContentSection.scss\";\n\nconst ContentSection = ({\n  className,\n  children,\n  title,\n  subTitle,\n  isLight,\n  contentAlignment,\n  titleAlignment\n}) => {\n  const headerClasses = cx(\"ContentSection-title\", {\n    \"ContentSection-title--alignCenter\": titleAlignment === \"center\",\n    \"ContentSection-title--alignLeft\": titleAlignment === \"left\",\n    \"ContentSection-title--textLight\": isLight\n  });\n  const contentClasses = cx(`ContentSection-content ${className}`, {\n    \"ContentSection-content--alignCenter\": contentAlignment === \"center\",\n    \"ContentSection-content--alignLeft\": contentAlignment === \"left\"\n  });\n\n  return (\n    <div className=\"ContentSection\">\n      {title && (\n        <header className={headerClasses}>\n          <h1>{title}</h1>\n          {subTitle && <h2>{subTitle}</h2>}\n        </header>\n      )}\n      <div className={contentClasses}>{children}</div>\n    </div>\n  );\n};\n\nContentSection.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  isLight: PropTypes.bool,\n  contentAlignment: PropTypes.oneOf([\"left\", \"center\"]),\n  textAlignment: PropTypes.oneOf([\"left\", \"center\"])\n};\n\nContentSection.defaultProps = {\n  className: \"\",\n  title: null,\n  subTitle: null,\n  contentAlignment: \"left\",\n  textAlignment: \"left\",\n  isLight: false\n};\n\nexport default ContentSection;\n","export { default } from './ContentSection';"],"sourceRoot":""}